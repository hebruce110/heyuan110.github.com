<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on Bruce&#39;s Blog</title>
    <link>http://www.heyuan110.com/tags/nginx/</link>
    <description>Recent content in nginx on Bruce&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 03 Jul 2020 13:19:44 +0800</lastBuildDate>
    
	<atom:link href="http://www.heyuan110.com/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx报No route to host错误</title>
      <link>http://www.heyuan110.com/posts/linux/nginx/nginx-error-noroutetohost/</link>
      <pubDate>Fri, 03 Jul 2020 13:19:44 +0800</pubDate>
      
      <guid>http://www.heyuan110.com/posts/linux/nginx/nginx-error-noroutetohost/</guid>
      <description>最近调整了后端站点架构为：user-------&amp;gt;nginx proxy server--------》internal host ------(cname)----》elb host，跑一段时间后经常出现诡异的情况，访问时不时会挂掉，只要重启nginx proxy集群里所有机器的nginx就能恢复， 经过检查发现集群里部分机器往后转发时报如下错误:
 2020/06/08 16:31:20 [error] 13741#0: *116374839 connect() failed (113: No route to host) while connecting to upstream, client: 2607:xxxx:969:f1f0:c3d:70ec:178f:fd24, server: localhost, request: &amp;quot;POST /v1.4/source HTTP/1.1&amp;quot;, upstream: &amp;quot;http://172.31.xx.xx:80/v1.4/source&amp;quot;, host: &amp;quot;api.xxxx.com&amp;quot; 网上搜索找到的资料都讲防火墙原因，经过仔细排查排除了。通过仔细分析出现异常时的监控发现，在异常时间点aws elb的ip发生了变化，于是将症状和云服务的SA沟通，他说AWS ELB的IP是会变化的（之前以为是固定的）， 建议nginx上的upstream需要动态去刷新，并建议使用nginx的jdomain模块来做动态解析，参考地址https://www.nginx.com/resources/wiki/modules/domain_resolve/，我们加上这个模块后重新部署nginx问题就没再出现。
其实原因很简单，nginx proxy指向域名时，nginx会缓存域名解析到的ip，如果域名对应的ip改变了而proxy nginx又没刷新缓存的ip，后面流量继续往旧ip转发，就会报错了，增加的动态解析模块指定dns和时间间隔去获取最新的ip并更新到缓存里，这样就保证了域名指向的ip变更proxy nginx能及时更新缓存ip。</description>
    </item>
    
    <item>
      <title>Nginx实现部分页面https</title>
      <link>http://www.heyuan110.com/posts/linux/nginx/2016-04-22-nginx-https/</link>
      <pubDate>Fri, 22 Apr 2016 20:33:37 +0000</pubDate>
      
      <guid>http://www.heyuan110.com/posts/linux/nginx/2016-04-22-nginx-https/</guid>
      <description>由于业务需要，在checkout页面需要实现https加密访问，之前只做过nginx的全站https，对于部分页面https搜索方法有说在代码里直接写成https，有说服务器上直接配置的，做了对比觉得还是nginx上直接配置靠谱，开始动手.
需求: 全站除了checkout页面https，其他都采取http访问, 如果不符合这个规则的，按照规则强制跳转.
思路: http访问时，在nginx里判断路径包含/checkout，就强制将http转到https；https访问时，判断非checkout，就强制调到http。思路是没有问题，问题是我想用nginx的location实现，研究了半天没找到很好的方案实现[非checkout]. 不过最后还是实现了~_~,用到了nginx的proxy_pass，下面讲具体实现，最后会放出完整的配置,也许还有问题，欢迎提出.
直接把nginx配置放上来, server_name自行做修改，用了反向代理proxy_pass到负载均衡服务器.
 server { server_name heyuan110.com; rewrite ^/(.*) http://www.heyuan110.com/$1 permanent; } server { listen 80; server_name www.heyuan110.com; gzip on; gzip_min_length 1k; gzip_buffers 16 64k; gzip_http_version 1.1; gzip_comp_level 4; gzip_types text/plain application/javascript application/x-javascript text/css application/xml; gzip_vary on; access_log /var/log/nginx/access.log; error_log /var/log/nginx/error.log; location ~* /news/show/* { return 301 https://$host$request_uri; } location / { proxy_pass http://web; proxy_connect_timeout 600; proxy_read_timeout 600; proxy_send_timeout 600; proxy_buffer_size 64k; proxy_buffers 4 32k; proxy_busy_buffers_size 64k; proxy_temp_file_write_size 64k; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_redirect off; } location = /robots.</description>
    </item>
    
  </channel>
</rss>